1,需要添加的依赖：
    <dependency>
        <groupId>org.elasticsearch.client</groupId>
        <artifactId>transport</artifactId>
        <version>5.5.0</version>
    </dependency>

2，日记信息依赖：
    <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>2.8.2</version>
    </dependency>

    resources 下添加log4j2.properties
    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout

    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console

3，ES 通过 TransportClient 来和ES 集群建立连接
    //  不加入到集群里面
    //  获取连接Client

    TransportClient client = new PreBuiltTransportClient(Settings.EMPTY)
    .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName("host1"), 9300))
    .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName("host2"), 9300));

    //  shutdown

    client.close();

    client 有自动嗅探集群数据节点的功能，默认不开启，
    Settings settings = Settings.builder()
    .put("client.transport.sniff", true).build();
    TransportClient client = new PreBuiltTransportClient(settings);

4，简单的API
    4.1 Index 的api
        创建索引：
            首先要生成一个Json 文档，有一下几种办法：
            I，手动构造：
                String json = "{" +
                "\"user\":\"kimchy\"," +
                "\"postDate\":\"2013-01-30\"," +
                "\"message\":\"trying out Elasticsearch\"" +
                "}";

            II，使用Map 的形式：
                Map<String, Object> json = new HashMap<String, Object>();
                json.put("user","kimchy");
                json.put("postDate",new Date());
                json.put("message","trying out Elasticsearch");

            III， 使用jackson, 第三方jar 包
                import com.fasterxml.jackson.databind.*;
                // instance a json mapper
                ObjectMapper mapper = new ObjectMapper(); // create once, reuse
                // generate json
                byte[] json = mapper.writeValueAsBytes(yourbeaninstance);

            IV，使用内部的ES API:(可以直接查看生成的json 内容String json = builder.string();)
                import static org.elasticsearch.common.xcontent.XContentFactory.*;
                XContentBuilder builder = jsonBuilder()
                .startObject()
                .field("user", "kimchy")
                .field("postDate", new Date())
                .field("message", "trying out Elasticsearch")
                .endObject()
        以下的例子索引一个json文档到一个名叫twitter 的，类型为tweet 的值为1的索引。
            import static org.elasticsearch.common.xcontent.XContentFactory.*;

            IndexResponse response = client.prepareIndex("twitter", "tweet", "1")
            .setSource(jsonBuilder()
            .startObject()
            .field("user", "kimchy")
            .field("postDate", new Date())
            .field("message", "trying out Elasticsearch")
            .endObject()
            )
            .get();







